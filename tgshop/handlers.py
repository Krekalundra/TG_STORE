from asgiref.sync import sync_to_async
from aiogram import Dispatcher, types
from aiogram.filters.command import Command as AiogramCommand
from aiogram import F
from tgshop.models.settings import TelegramSettings
from tgshop.models.operators import Operator
from tgshop.keyboards import main_keyboard

async def start_command(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é """
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã", reply_markup=main_keyboard)

async def handle_catalog(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ö–∞—Ç–∞–ª–æ–≥ """
    operator = await sync_to_async(Operator.load)()
    await message.answer("–ó–¥–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥ –º–∞–≥–∞–∑–∏–Ω–∞. –¢—ã –µ–≥–æ –Ω–µ –≤–∏–¥–∏—à—å, –∞ –æ–Ω –µ—Å—Ç—å")

async def handle_cart(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ö–æ—Ä–∑–∏–Ω–∞' """
    operator = await sync_to_async(Operator.load)()
    await message.answer("–ó–¥–µ—Å—å —Ç–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞, —Å —Ç–µ–±—è 5000 —É–∂–µ —Å–ø–∏—Å–∞–ª–∏")

async def handle_shippay(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞' """
    settings = await sync_to_async(TelegramSettings.load)()
    await message.answer(f"üì¶ {settings.ship_pay}")

async def handle_bonus(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ë–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞' """
    settings = await sync_to_async(TelegramSettings.load)()
    await message.answer(f"üì¶ {settings.bonus}")    

async def handle_operator(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º' """
    operator = await sync_to_async(Operator.load)()
    await message.answer(f"–ù–∞—à —á–∞–π–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –í–∞–º –ø–æ–º–æ–∂–µ—Ç:\n @{operator.username}")

async def handle_about(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û –º–∞–≥–∞–∑–∏–Ω–µ' """
    settings = await sync_to_async(TelegramSettings.load)()
    await message.answer(f"üì¶ {settings.about}")

async def handle_any_message(message: types.Message):
    """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é """
    await message.answer("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –Ω–∏–∂–µ:", reply_markup=main_keyboard)



def register_handlers(dp: Dispatcher):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ """
    dp.message.register(start_command, AiogramCommand(commands=["start"]))
    dp.message.register(handle_catalog, F.text == "–ö–∞—Ç–∞–ª–æ–≥")
    dp.message.register(handle_cart, F.text == "–ö–æ—Ä–∑–∏–Ω–∞")
    dp.message.register(handle_shippay, F.text == "–û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞")
    dp.message.register(handle_bonus, F.text == "–ë–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
    dp.message.register(handle_operator, F.text == "–°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º")
    dp.message.register(handle_about, F.text == "–û –º–∞–≥–∞–∑–∏–Ω–µ")
    dp.message.register(handle_any_message)