from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from tgshop.models.categories import Category
from tgshop.models.product import Product
from django.shortcuts import get_object_or_404
#–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
#–î–ª—è –∫–æ–º–º–∏—Ç–∞


# –°–≤–µ–∂–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—è
categories_new = Category.objects.filter(parent__isnull=True).order_by('order')
updated_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=cat.name, callback_data=f"category_{cat.id}")] 
            for cat in categories_new
        ]
    )

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞")],
        [KeyboardButton(text="–û–ø–ª–∞—Ç–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞"), KeyboardButton(text="–ë–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")],
        [KeyboardButton(text="–°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"), KeyboardButton(text="–û –º–∞–≥–∞–∑–∏–Ω–µ")],
    ],
    resize_keyboard=True
)

 # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
categories = Category.objects.filter(parent__isnull=True).order_by('order')
catalog_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=cat.name, callback_data=f"category_{cat.id}")] for cat in categories
        ]
    )


def create_keyboard(category_id=None):
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons = []
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    subcategories = Category.objects.filter(parent_id=category_id)
    products = Product.objects.filter(category_id=category_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
    for subcategory in subcategories:
        buttons.append([
            InlineKeyboardButton(
                text=subcategory.name,
                callback_data=f"category_{subcategory.id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    for product in products:
        buttons.append([
            InlineKeyboardButton(
                text=f"{product.name} - {product.price}‚ÇΩ",
                callback_data=f"product_{product.id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    if category_id is not None:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        current_category = Category.objects.get(id=category_id)
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–µ–π
        if current_category.parent_id:
            back_id = current_category.parent_id
        else:
            # –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤–æ–µ –º–µ–Ω—é
            back_id = "main"
        
        buttons.append([
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"category_{back_id}"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def create_product_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_to_cart_{product_id}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"back_to_category_{product_id}")]
    ])
    return keyboard
