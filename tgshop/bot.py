#tgshop/tgshop/bot.py

import os
import sys
import django
import logging
import asyncio
from pathlib import Path
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from django.core.management.base import BaseCommand
# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tgshop.config.settings')
django.setup()

from tgshop.models.settings import TelegramSettings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class BotManager:
    def __init__(self):
        self.bot = None
        self.dp = None

    async def on_startup(self):
        logger.info("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")

    async def start_command(self, message: types.Message):
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã")

    async def handle_any_message(self, message: types.Message):
        await message.answer("–ù–µ –ø–æ–Ω—è–ª –≤–∞—Å, —è –ø—Ä–æ—Å—Ç–æ –±–æ—Ç ü§ñ")

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞'

    def handle(self, *args, **options):
        try:
            settings = TelegramSettings.load()
            if not settings.token:
                logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∞–¥–º–∏–Ω–∫–µ.")
                return

            bot_manager = BotManager()
            bot_manager.bot = Bot(token=settings.token)
            bot_manager.dp = Dispatcher()

            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            bot_manager.dp.startup.register(bot_manager.on_startup)
            bot_manager.dp.message.register(bot_manager.start_command, Command(commands=['start']))
            bot_manager.dp.message.register(bot_manager.handle_any_message)

            # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
            async def main():
                await bot_manager.dp.start_polling(bot_manager.bot)

            asyncio.run(main())

        except Exception as e:
            logger.error(f"üî• –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ python3 bot.py (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Django-–∫–æ–º–∞–Ω–¥)
    Command().handle()